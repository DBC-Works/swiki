/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SandBoxImport } from './routes/SandBox'
import { Route as NewPageImport } from './routes/NewPage'
import { Route as IndexImport } from './routes/index'
import { Route as PagesIndexImport } from './routes/pages/index'
import { Route as HistoryIndexImport } from './routes/history/index'
import { Route as PagesPageTitleIndexImport } from './routes/pages/$pageTitle/index'
import { Route as PagesPageTitleEditImport } from './routes/pages/$pageTitle/edit'
import { Route as PagesPageTitleDiffToFromImport } from './routes/pages/$pageTitle/diff/$to/$from'

// Create/Update Routes

const SandBoxRoute = SandBoxImport.update({
  id: '/SandBox',
  path: '/SandBox',
  getParentRoute: () => rootRoute,
} as any)

const NewPageRoute = NewPageImport.update({
  id: '/NewPage',
  path: '/NewPage',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PagesIndexRoute = PagesIndexImport.update({
  id: '/pages/',
  path: '/pages/',
  getParentRoute: () => rootRoute,
} as any)

const HistoryIndexRoute = HistoryIndexImport.update({
  id: '/history/',
  path: '/history/',
  getParentRoute: () => rootRoute,
} as any)

const PagesPageTitleIndexRoute = PagesPageTitleIndexImport.update({
  id: '/pages/$pageTitle/',
  path: '/pages/$pageTitle/',
  getParentRoute: () => rootRoute,
} as any)

const PagesPageTitleEditRoute = PagesPageTitleEditImport.update({
  id: '/pages/$pageTitle/edit',
  path: '/pages/$pageTitle/edit',
  getParentRoute: () => rootRoute,
} as any)

const PagesPageTitleDiffToFromRoute = PagesPageTitleDiffToFromImport.update({
  id: '/pages/$pageTitle/diff/$to/$from',
  path: '/pages/$pageTitle/diff/$to/$from',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/NewPage': {
      id: '/NewPage'
      path: '/NewPage'
      fullPath: '/NewPage'
      preLoaderRoute: typeof NewPageImport
      parentRoute: typeof rootRoute
    }
    '/SandBox': {
      id: '/SandBox'
      path: '/SandBox'
      fullPath: '/SandBox'
      preLoaderRoute: typeof SandBoxImport
      parentRoute: typeof rootRoute
    }
    '/history/': {
      id: '/history/'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/pages/': {
      id: '/pages/'
      path: '/pages'
      fullPath: '/pages'
      preLoaderRoute: typeof PagesIndexImport
      parentRoute: typeof rootRoute
    }
    '/pages/$pageTitle/edit': {
      id: '/pages/$pageTitle/edit'
      path: '/pages/$pageTitle/edit'
      fullPath: '/pages/$pageTitle/edit'
      preLoaderRoute: typeof PagesPageTitleEditImport
      parentRoute: typeof rootRoute
    }
    '/pages/$pageTitle/': {
      id: '/pages/$pageTitle/'
      path: '/pages/$pageTitle'
      fullPath: '/pages/$pageTitle'
      preLoaderRoute: typeof PagesPageTitleIndexImport
      parentRoute: typeof rootRoute
    }
    '/pages/$pageTitle/diff/$to/$from': {
      id: '/pages/$pageTitle/diff/$to/$from'
      path: '/pages/$pageTitle/diff/$to/$from'
      fullPath: '/pages/$pageTitle/diff/$to/$from'
      preLoaderRoute: typeof PagesPageTitleDiffToFromImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/NewPage': typeof NewPageRoute
  '/SandBox': typeof SandBoxRoute
  '/history': typeof HistoryIndexRoute
  '/pages': typeof PagesIndexRoute
  '/pages/$pageTitle/edit': typeof PagesPageTitleEditRoute
  '/pages/$pageTitle': typeof PagesPageTitleIndexRoute
  '/pages/$pageTitle/diff/$to/$from': typeof PagesPageTitleDiffToFromRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/NewPage': typeof NewPageRoute
  '/SandBox': typeof SandBoxRoute
  '/history': typeof HistoryIndexRoute
  '/pages': typeof PagesIndexRoute
  '/pages/$pageTitle/edit': typeof PagesPageTitleEditRoute
  '/pages/$pageTitle': typeof PagesPageTitleIndexRoute
  '/pages/$pageTitle/diff/$to/$from': typeof PagesPageTitleDiffToFromRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/NewPage': typeof NewPageRoute
  '/SandBox': typeof SandBoxRoute
  '/history/': typeof HistoryIndexRoute
  '/pages/': typeof PagesIndexRoute
  '/pages/$pageTitle/edit': typeof PagesPageTitleEditRoute
  '/pages/$pageTitle/': typeof PagesPageTitleIndexRoute
  '/pages/$pageTitle/diff/$to/$from': typeof PagesPageTitleDiffToFromRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/NewPage'
    | '/SandBox'
    | '/history'
    | '/pages'
    | '/pages/$pageTitle/edit'
    | '/pages/$pageTitle'
    | '/pages/$pageTitle/diff/$to/$from'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/NewPage'
    | '/SandBox'
    | '/history'
    | '/pages'
    | '/pages/$pageTitle/edit'
    | '/pages/$pageTitle'
    | '/pages/$pageTitle/diff/$to/$from'
  id:
    | '__root__'
    | '/'
    | '/NewPage'
    | '/SandBox'
    | '/history/'
    | '/pages/'
    | '/pages/$pageTitle/edit'
    | '/pages/$pageTitle/'
    | '/pages/$pageTitle/diff/$to/$from'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NewPageRoute: typeof NewPageRoute
  SandBoxRoute: typeof SandBoxRoute
  HistoryIndexRoute: typeof HistoryIndexRoute
  PagesIndexRoute: typeof PagesIndexRoute
  PagesPageTitleEditRoute: typeof PagesPageTitleEditRoute
  PagesPageTitleIndexRoute: typeof PagesPageTitleIndexRoute
  PagesPageTitleDiffToFromRoute: typeof PagesPageTitleDiffToFromRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NewPageRoute: NewPageRoute,
  SandBoxRoute: SandBoxRoute,
  HistoryIndexRoute: HistoryIndexRoute,
  PagesIndexRoute: PagesIndexRoute,
  PagesPageTitleEditRoute: PagesPageTitleEditRoute,
  PagesPageTitleIndexRoute: PagesPageTitleIndexRoute,
  PagesPageTitleDiffToFromRoute: PagesPageTitleDiffToFromRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/NewPage",
        "/SandBox",
        "/history/",
        "/pages/",
        "/pages/$pageTitle/edit",
        "/pages/$pageTitle/",
        "/pages/$pageTitle/diff/$to/$from"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/NewPage": {
      "filePath": "NewPage.tsx"
    },
    "/SandBox": {
      "filePath": "SandBox.tsx"
    },
    "/history/": {
      "filePath": "history/index.tsx"
    },
    "/pages/": {
      "filePath": "pages/index.tsx"
    },
    "/pages/$pageTitle/edit": {
      "filePath": "pages/$pageTitle/edit.tsx"
    },
    "/pages/$pageTitle/": {
      "filePath": "pages/$pageTitle/index.tsx"
    },
    "/pages/$pageTitle/diff/$to/$from": {
      "filePath": "pages/$pageTitle/diff/$to/$from.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
